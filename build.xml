<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="xml-report-plugin-custom" basedir="." default="all">
  <import file="${basedir}/xml-report-plugin.xml"/>

  <property environment="env"/>
  <property name="dist" value="dist"/>
  <property name="dist.tmp" value="out/dist.tmp"/>
  <property name="dist.unpacked" value="${dist.tmp}/unpacked"/>
  <property name="dist.output.agent" value="${dist.unpacked}/agent"/>
  <property name="build.number" value="${env.BUILD_NUMBER}"/>

  <target name="all" depends="check,xml-report-plugin.all"/>

  <target name="pack.agent" description="pack agent part of plugin">
    <delete dir="${dist.output.agent}" quiet="true"/>
    <mkdir dir="${dist.output.agent}"/>

    <property name="dist.tmp.agent" value="${dist.tmp}/agent"/>
    <property name="dist.tmp.agent.content" value="${dist.tmp.agent}/xml-report-plugin/lib"/>
    <delete dir="${dist.tmp.agent}" quiet="true"/>
    <mkdir dir="${dist.tmp.agent.content}"/>

    <jar destfile="${dist.tmp.agent.content}/xml-report-plugin.jar"
         basedir="${agent.output.dir}" update="true"/>
    <jar destfile="${dist.tmp.agent.content}/xml-report-plugin-common.jar"
         basedir="${common.output.dir}" update="true"/>
    <copy todir="${dist.tmp.agent.content}">
      <fileset dir="${basedir}/agent/lib"/>
    </copy>
    <zip destfile="${dist.output.agent}/xml-report-plugin.zip"
         basedir="${dist.tmp.agent}"
         update="true"/>
    <delete dir="${dist.tmp.agent}"/>
  </target>

  <target name="pack.server" description="pack server part of plugin">
    <property name="dist.output.server" value="${dist.unpacked}/server"/>
    <mkdir dir="${dist.output.server}"/>
    <jar destfile="${dist.output.server}/xml-report-plugin.jar"
         basedir="${server.output.dir}" update="true"/>
  </target>

  <target name="dist" depends="all">
    <delete dir="${dist}" quiet="true"/>
    <mkdir dir="${dist}"/>

    <delete dir="${dist.unpacked}" quiet="true"/>
    <mkdir dir="${dist.unpacked}"/>
    <antcall target="pack.agent"/>
    <antcall target="pack.server"/>

    <antcall target="update.version.in.plugin.descriptor"/>
    <copy todir="${dist.unpacked}" file="${basedir}/teamcity-plugin.xml"/>

    <zip destfile="${dist}/xml-report-plugin.zip"
         basedir="${dist.unpacked}"
         update="true"/>
    <delete dir="${dist.tmp}"/>
  </target>

  <target name="update.version.in.plugin.descriptor">
    <xslt in="teamcity-plugin.xml" out="teamcity-plugin_new.xml" style="teamcity-plugin.xsl">
      <param name="version" expression="${build.number}"/>
    </xslt>

    <rename src="teamcity-plugin_new.xml" dest="teamcity-plugin.xml"/>
  </target>

  <target name="deploy" depends="dist" description="deploy plugin to TeamCity">
    <copy todir="${user.home}/.BuildServer/plugins">
      <fileset dir="${dist}"/>
    </copy>
  </target>

  <target name="deploy.agent" depends="dist.agent" description="deploy agent part of plugin to TeamCity">
    <copy todir="${path.variable.teamcitydistribution}/webapps/ROOT/update/plugins">
      <fileset dir="${dist}"/>
    </copy>
  </target>

  <target name="dist.agent" depends="all">
    <delete dir="${dist}" quiet="true"/>
    <mkdir dir="${dist}"/>

    <delete dir="${dist.unpacked}" quiet="true"/>
    <mkdir dir="${dist.unpacked}"/>

    <antcall target="pack.agent"/>
    <copy todir="${dist}">
      <fileset dir="${dist.output.agent}"/>
    </copy>
  </target>

  <target name="copy.log4j.configuration">
    <property name="tests.testdata" value="${basedir}/tests/testData"/>
    <copy todir="${tests.testoutput.dir}" file="${tests.testdata}/log4j.xml"/>
  </target>

  <target name="prepare.test.data">
    <property name="test.data.dir" value="${basedir}/tests/testData/findBugs"/>

    <xslt basedir="${test.data.dir}" destdir="${test.data.dir}"
          includes="*.sample.xml" extension=".trans" style="reportPaths.xsl">
      <param name="path" expression="${basedir}"/>
    </xslt>
    <move todir="${test.data.dir}" includeemptydirs="false">
      <fileset dir="${test.data.dir}">
        <include name="*.trans"/>
      </fileset>
      <mapper type="glob" from="*.sample.trans" to="*.xml"/>
    </move>

    <delete>
      <fileset dir="${test.data.dir}" includes="*.sample.trans"/>
    </delete>

  </target>

  <target name="test">
    <delete dir="test-reports" quiet="true"/>
    <mkdir dir="test-reports"/>

    <antcall target="copy.log4j.configuration"/>
    <antcall target="prepare.test.data"/>

    <junit printsummary="on" fork="true" haltonfailure="false" haltonerror="false" failureproperty="failure_found"
           showoutput="true">
      <classpath>
        <pathelement location="${agent.home.dir}/lib/runtime-util.jar"/>
        <path refid="tests.runtime.module.classpath"/>
      </classpath>

      <formatter type="xml"/>

      <batchtest todir="test-reports">
        <fileset dir="${tests.testoutput.dir}">
          <include name="**/*Test.class"/>
        </fileset>
      </batchtest>
    </junit>
    <antcall target="check_failures"/>
  </target>

  <target name="check_failures" if="failure_found">
    <fail message="Failures found"/>
  </target>

  <target name="check">
    <condition property="not.configured">
      <not>
        <and>
          <isset property="path.variable.teamcitydistribution"/>
          <length string="${path.variable.teamcitydistribution}" when="greater" length="0"/>
          <available file="${path.variable.teamcitydistribution}/webapps/ROOT/WEB-INF/lib"/>
        </and>
      </not>
    </condition>
    <fail if="not.configured"
          message="Please define 'path.variable.teamcitydistribution' property in xml-report-plugin.properties file. The property should point to unpacked TeamCity .tar.gz or .exe distribution."/>
  </target>

</project>